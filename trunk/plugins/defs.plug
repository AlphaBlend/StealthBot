'defs
'1.0
'&Definitions:Hdx
'&define:newdef <phrase>|<definition>:deldef
'&
'&Replacement for the internal Define/NewDef/DelDef commands.

Sub defs_Event_WhisperFromUser(Username, Flags, Message)
  If Left(Message, Len(BotVars.Trigger)) = BotVars.Trigger Then
    Dim myAccess, myFlags
    GetDBEntry Username, myAccess, myFlags
    call defs_ParseCommand(3, Username, myAccess, myFlags, Mid(Message, Len(BotVars.Trigger)+1))
  End If
End Sub

Sub defs_Event_UserTalk(Username, Flags, Message, Ping)
  If Left(Message, Len(BotVars.Trigger)) = BotVars.Trigger Then
    Dim myAccess, myFlags
    GetDBEntry Username, myAccess, myFlags
    call defs_ParseCommand(1, Username, myAccess, myFlags, Mid(Message, Len(BotVars.Trigger)+1))
  End If
End Sub

Sub defs_Event_PressedEnter(Text)
  If Left(Text, 1) = "/" Then
    Dim veto
    If Left(Text, 2) = "//" Then
        veto = defs_ParseCommand(1, vbNullstring, 1001, "A", Mid(Text, 3))
    Else
        veto = defs_ParseCommand(4, vbGreen, 1001, "A", Mid(Text, 2))
    End If
    If (veto = 1) Then VetoThisMessage
  End If
End Sub
'------------------------------------------------------------
Sub defs_define(Source, Username, myAccess, myFlags, Message)
  Dim strDef
  If(myAccess >= 60 Or InStr(1, myFlags, "A", vbTextCompare)) Then
    If(Len(Message) = 0) Then
      Call DSP(Source, "Error: Please format your query correctly. (.define term)", Username)
    Else
      strDef = GetConfigEntry("Def", Message, "definitions.ini")
      If(Len(strDef) > 0) Then
        Call DSP(Source, "Definition for " & Chr(&h22) & Message & Chr(&h22) & ": " & strDef, Username)
      Else
        Call DSP(Source, "Definition for " & Chr(&h22) & Message & Chr(&h22) & " not found.", Username)
      End If
    End If
  End If
End Sub

'------------------------------------------------------------
Sub defs_newdef(Source, Username, myAccess, myFlags, Message)
  Dim strWord, strDef, iPos
  If(myAccess >= 60 Or InStr(1, myFlags, "A", vbTextCompare)) Then  
    iPos = InStr(1, Message, "|", vbTextCompare)
    If(iPos < 2) Then
      Call DSP(Source, "Error: Please format your definitions correctly. (.newdef term|definition)", Username)
    Else
      strWord = Left(Message, iPos-1)
      strDef = Mid(Message, iPos+1)
      If(Len(strWord) = 0 Or Len(strDef) = 0) Then
        Call DSP(Source, "Error: Please format your definitions correctly. (.newdef term|definition)", Username)
      Else
        Call WriteConfigEntry("Def", strWord, strDef, "definitions.ini")
        Call DSP(Source, "Added a definition for " & Chr(&h22) & strWord & Chr(&h22) & ".", Username)
      End If
    End If
  End If
End Sub

'------------------------------------------------------------
Sub defs_deldef(Source, Username, myAccess, myFlags, Message)
  Dim strDef
  If(myAccess >= 60 Or InStr(1, myFlags, "A", vbTextCompare)) Then
    If(Len(Message) = 0) Then
      Call DSP(Source, "Error: Please format your query correctly. (.DelDef term)", Username)
    Else
      strDef = GetConfigEntry("Def", Message, "definitions.ini")
      If(Len(strDef) > 0) Then
        Call WriteConfigEntry("Def", Message, vbNullString, "definitions.ini")
        Call DSP(Source, "Definition for " & Chr(&h22) & Message & Chr(&h22) & " deleted.", Username)
      Else
        Call DSP(Source, "Definition for " & Chr(&h22) & Message & Chr(&h22) & " not found.", Username)
      End If
    End If
  End If
End Sub

'------------------------------------------------------------
Function defs_ParseCommand(Source, Username, myAccess, myFlags, Message)
  Dim strCommand
  strCommand = LCase(Split(Message & Space(1), Space(1))(0))
  Select Case strCommand
    case "newdef", "adddef": Call defs_NewDef(Source, Username, myAccess, myFlags, Mid(Message, Len(strCommand) + 2))
    case "define", "def":    Call defs_Define(Source, Username, myAccess, myFlags, Mid(Message, Len(strCommand) + 2))
    case "deldef", "remdef": Call defs_DelDef(Source, Username, myAccess, myFlags, Mid(Message, Len(strCommand) + 2))
    Case Else: Exit Function
  End Select
  defs_ParseCommand = 1
End Function